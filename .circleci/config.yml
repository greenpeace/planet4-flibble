version: 2

defaults: &defaults
  docker:
    - image: gcr.io/planet-4-151612/p4-builder:build-79
  working_directory:  /home/circleci

job_environments:
  common_environment: &common_environment
    CONTAINER_PREFIX: planet4-flibble
    APP_HOSTPATH: flibble
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: p4-develop-k8s
    GOOGLE_PROJECT_ID: planet-4-151612
    HELM_NAMESPACE: develop
    NEWRELIC_APPNAME: P4 flibble Development
    WP_DB_NAME: planet4-flibble_wordpress_develop
    WP_STATELESS_BUCKET: planet4-flibble-stateless-develop
  release_environment: &release_environment
    APP_ENVIRONMENT: staging
    APP_HOSTNAME: release.k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: planet4-prod
    GCLOUD_CLUSTER: planet4-production
    GOOGLE_PROJECT_ID: planet4-production
    HELM_NAMESPACE: flibble
    HELM_RELEASE: planet4-flibble-release
    NEWRELIC_APPNAME: P4 flibble Release
    WP_DB_NAME: planet4-flibble_wordpress_release
    WP_STATELESS_BUCKET: planet4-flibble-stateless-release
  production_environment: &production_environment
    APP_HOSTNAME: master.k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: planet4-prod
    GCLOUD_CLUSTER: planet4-production
    GOOGLE_PROJECT_ID: planet4-production
    HELM_NAMESPACE: flibble
    HELM_RELEASE: planet4-flibble-master
    MIN_REPLICA_COUNT: 1
    MAX_REPLICA_COUNT: 1
    NEWRELIC_APPNAME: P4 flibble Production
    WP_DB_NAME: planet4-flibble_wordpress_master
    WP_STATELESS_BUCKET: planet4-flibble-stateless

job_definitions:
  build_steps: &build_steps
    steps:
      - setup_remote_docker
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var
      - run: mkdir -p /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Build" notify-job-failure.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  prepare_release: &prepare_release
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: git-current-tag.sh | tee /tmp/workspace/var/old_release
      - run: increment-version.sh $(cat /tmp/workspace/var/old_release) | tee /tmp/workspace/var/new_release
      - run: |
          if ! release-start.sh $(cat /tmp/workspace/var/new_release)
          then
            # Release branch already exists
            git checkout release/$(cat /tmp/workspace/var/new_release)
            # Merge changes from develop to release
            git merge --no-edit --no-ff --log -m ":robot: Merge develop > release" develop
          fi
      - run: mv composer-local.json /tmp/workspace
      - run: jq ".version=\"$(cat /tmp/workspace/var/new_release | cut -d "v" -f 2)\"|.require|=with_entries(select(.key|test(\"greenpeace.*$\")|not))" /tmp/workspace/composer-local.json | tee composer-local.json
      - run: composer validate composer-local.json
      - run: git add .
      - run:
          name: git commit
          command: |
            git commit --allow-empty -m ":robot: Release $(cat /tmp/workspace/var/new_release)"
      - run: git push origin --delete release/$(cat /tmp/workspace/var/old_release) || exit 0
      - run: git push -u origin release/$(cat /tmp/workspace/var/new_release)
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Prepare" notify-job-failure.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  notify_promote: &notify_promote
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: notify
          command: |
            TYPE="@rawalker Promote release/$(increment-version.sh "$(git-current-tag.sh)")" \
            EXTRA_TEXT="Verify: https://$APP_HOSTNAME/$APP_HOSTPATH"
            notify-job-hold.sh

  finish_release: &finish_release
    working_directory: /tmp/workspace/src
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run: increment-version.sh "$(git-current-tag.sh)" | tee /tmp/workspace/var/new_release
      - run: release-finish.sh
      - run: git push origin --delete release/$(cat /tmp/workspace/var/new_release)
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Promote" notify-job-failure.sh

  deploy_steps: &deploy_steps
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make -j2 deploy

jobs:
  build-branch:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  prepare-release:
    <<: *defaults
    <<: *prepare_release

  notify-promote:
    <<: *defaults
    <<: *notify_promote
    environment:
      <<: *release_environment

  build-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *build_steps

  finish-release:
    <<: *defaults
    <<: *finish_release

  build-tag:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *build_steps

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

  deploy-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *deploy_steps

  deploy-tag:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *deploy_steps


workflow_definitions:
  develop_common: &develop_common
    context: org-global
    filters:
      branches:
        only: develop
  release_common: &release_common
    context: org-global
    filters:
      branches:
        only: /^release.*/
  tag_common: &tag_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\p{Digit}+\.\p{Digit}+\.\p{Digit}+.*/

workflows:
  version: 2
  develop:
    jobs:
    - build-branch:
        <<: *develop_common
    - deploy-develop:
        <<: *develop_common
        requires:
          - build-branch
    - prepare-release:
        <<: *develop_common
        requires:
          - deploy-develop

  release:
    jobs:
    - build-release:
        <<: *release_common
    - deploy-release:
        <<: *release_common
        requires:
          - build-release
    - notify-promote:
        <<: *release_common
        requires:
          - deploy-release
    - hold-promote:
        <<: *release_common
        type: approval
        requires:
          - deploy-release
    - finish-release:
        <<: *release_common
        requires:
          - hold-promote
          - notify-promote
  tag:
    jobs:
      - build-tag:
          <<: *tag_common
      - hold-tag:
          <<: *tag_common
          type: approval
          requires:
            - build-tag
      - deploy-tag:
          <<: *tag_common
          requires:
            - hold-tag
